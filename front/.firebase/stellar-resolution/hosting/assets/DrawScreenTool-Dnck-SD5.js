import{c as $,h$ as v,lw as T,lx as b,cO as C,ly as D,lz as S,lA as u,r,m as o,b as k,an as x,G as w,u as M}from"./index-BCRx-hwS.js";import{r as I}from"./mat2df64-DJ_RMjZ3.js";import{F as V,u as f,v as z,k as U,b as W,a as E,U as j}from"./drawSurfaces-DH8cxNSF.js";import{n as B}from"./InteractiveToolBase-Cty8kcDX.js";import"./distanceOperator-cFC6LGcz.js";import"./Point2D-CXC1yv_O.js";import"./ProjectionTransformation-CoAUJI3p.js";import"./Envelope2D-C_JUGA2P.js";import"./Transformation2D-sny6HUws.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./apiConverter-Da8xt-f2.js";import"./jsonConverter-BHyufzdl.js";import"./simplifyOperator-gNfZBcl9.js";import"./operatorSimplify-Dhzp2Ew2.js";import"./mat2d-BuXHlgXK.js";import"./memoize-DmxaQ-k8.js";import"./ReactiveSet-CIXlW0SJ.js";import"./dehydratedFeatureComparison-CjFdXHe0.js";import"./EditGeometryOperations-DzaQFUYT.js";import"./SnappingContext-lR2hMWGP.js";import"./SnappingDragPipelineStep-CBgiPcSk.js";import"./SnappingOperation-AR5JB0l3.js";let i=class extends ${constructor(t){super(t),this.coordinates=void 0,this.strokeDash=[],this.strokeWidth=1,this.strokeColor=[0,0,0,1],this.strokeDashColor=[255,255,255,1],this.fillColor=[0,0,0,0],this.visible=!0,this.isDecoration=!0}get _strokeStyle(){const t=this.strokeColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _strokeBackgroundStyle(){const t=this.strokeDashColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _fillStyle(){const t=this.fillColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _renderCoordinates(){const t=[];if(!this.coordinates)return{coordinates:t,rect:v};const e=T(b(C(v),this.coordinates),2*this.strokeWidth);e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.ceil(e[2]+.5),e[3]=Math.ceil(e[3]+.5);for(const s of this.coordinates)t.push([Math.floor(s[0]-e[0])+.5,Math.floor(s[1]-e[1])+.5]);return t.reverse(),{coordinates:t,rect:e}}render(){const{coordinates:t,rect:e}=this._renderCoordinates,s=D(e),n=S(e);return u("div",{classes:{"esri-outline-overlay-item":!0},styles:{left:e[0]+"px",top:e[1]+"px",width:s+"px",height:n+"px",visibility:this.visible?"visible":"hidden"}},u("svg",{height:n,styles:{display:"block"},width:s},u("polygon",{fill:this._fillStyle,points:t.map(([l,p])=>`${l},${p}`).join(" "),stroke:this._strokeBackgroundStyle,"stroke-width":this.strokeWidth}),u("polygon",{fill:"transparent",points:t.map(([l,p])=>`${l},${p}`).join(" "),stroke:this._strokeStyle,"stroke-dasharray":this.strokeDash.length?this.strokeDash.join(" "):void 0,"stroke-width":this.strokeWidth})))}renderCanvas(){}};r([o()],i.prototype,"coordinates",void 0),r([o()],i.prototype,"strokeDash",void 0),r([o()],i.prototype,"strokeWidth",void 0),r([o()],i.prototype,"strokeColor",void 0),r([o()],i.prototype,"strokeDashColor",void 0),r([o()],i.prototype,"fillColor",void 0),r([o()],i.prototype,"visible",void 0),r([o()],i.prototype,"isDecoration",void 0),r([o({readOnly:!0})],i.prototype,"_strokeStyle",null),r([o({readOnly:!0})],i.prototype,"_strokeBackgroundStyle",null),r([o({readOnly:!0})],i.prototype,"_fillStyle",null),r([o({readOnly:!0})],i.prototype,"_renderCoordinates",null),i=r([k("esri.views.overlay.OutlineOverlayItem")],i);let a=class extends x.EventedMixin(B){constructor(t){super(t),this.drawOperation=null,this._overlayItem=void 0,this.geometryType=null,this.mode=null,this.type="draw-screen"}initialize(){this.drawOperation=this._makeDrawOperation();const t=e=>{var s;return((s=this.drawOperation)==null?void 0:s.on(e,n=>{this._updateVisuals(),this.emit(e,n)}))??w()};this.addHandles([t("vertex-add"),t("vertex-remove"),t("vertex-update"),t("cursor-update"),t("complete")]),this.finishToolCreation()}destroy(){this.drawOperation=M(this.drawOperation),this._set("view",null)}get canRedo(){var t;return!!((t=this.drawOperation)!=null&&t.canRedo)}get canUndo(){var t;return!!((t=this.drawOperation)!=null&&t.canUndo)}set centeredToggled(t){this._set("centeredToggled",t),this._updateVisuals()}set enabled(t){const{drawOperation:e}=this;e&&(e.interactive=t),this._set("enabled",t)}set uniformSizeToggled(t){this._set("uniformSizeToggled",t),this._updateVisuals()}get updating(){var t;return((t=this.drawOperation)==null?void 0:t.updating)??!1}get cursor(){return this._get("cursor")??"crosshair"}set cursor(t){this._set("cursor",t);const{drawOperation:e}=this;e&&(e.cursor=t)}completeCreateOperation(){var t;(t=this.drawOperation)==null||t.complete()}onInputEvent(t){var e;this.destroyed||((e=this.drawOperation)==null||e.onInputEvent(t))}redo(){var t;(t=this.drawOperation)==null||t.redo()}undo(){var t;(t=this.drawOperation)==null||t.undo()}reset(){}_makeDrawOperation(){const{view:t}=this;return new V({view:t,manipulators:this.manipulators,geometryType:H(this.geometryType),drawingMode:this.mode,hasZ:!1,defaultZ:0,snapToSceneEnabled:!1,drawSurface:new f,hasM:!1,snappingManager:null,snappingVisualizer:null,graphic:null,cursor:this.cursor,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils})}get coordinates(){var p,y,m;const{drawOperation:t}=this;if(!(t!=null&&t.geometryIncludingUncommittedVertices.length))return[];const{coordinateHelper:e}=t,s=t.committableVertex,n=t.committedVertices.slice();s!=null&&n.push(e.pointToArray(s));const l=n.length;switch(this.geometryType){case"point":return n.slice(0,1);case"circle":case"rectangle":{const h=new z(I,f.spatialReference),g=this.geometryType==="circle"?U:W,O=this.geometryType==="circle"?E:j;if(l===1&&t.isCompleted){const d=n[0],c=h.makeMapPoint(d[0]+L,d[1]);return((p=g([d,c],h,!0))==null?void 0:p.geometry.rings[0])??[]}if(l===2){const d=this.geometryType!=="rectangle",c=this.centeredToggled!==d,_=this.geometryType!=="rectangle";return(this.uniformSizeToggled!==_?(y=g(n,h,c))==null?void 0:y.geometry.rings[0]:(m=O(n,h,c))==null?void 0:m.geometry.rings[0])??[]}return[]}}return n}_updateVisuals(){var t;if(!this._overlayItem){const e=new i({strokeDash:[5],strokeDashColor:[255,255,255,255]});(t=this.view.overlay)==null||t.addItem(e),this.addHandles(w(()=>{var s;(s=this.view.overlay)==null||s.removeItem(e),e==null||e.destroy(),this._overlayItem=void 0})),this._overlayItem=e}this._overlayItem.coordinates=this.coordinates}onDeactivate(){var t,e;(t=this.drawOperation)!=null&&t.isCompleted||((e=this.drawOperation)==null||e.cancel())}};function H(t){switch(t){case"polygon":case"point":return t;case"circle":case"rectangle":return"segment"}}r([o({value:!1})],a.prototype,"centeredToggled",null),r([o()],a.prototype,"drawOperation",void 0),r([o({value:!0})],a.prototype,"enabled",null),r([o({value:!1})],a.prototype,"uniformSizeToggled",null),r([o({constructOnly:!0})],a.prototype,"geometryType",void 0),r([o({constructOnly:!0})],a.prototype,"mode",void 0),r([o({readOnly:!0})],a.prototype,"type",void 0),r([o({readOnly:!0})],a.prototype,"updating",null),r([o({constructOnly:!0,nonNullable:!0})],a.prototype,"view",void 0),r([o({constructOnly:!0})],a.prototype,"automaticLengthMeasurementUtils",void 0),r([o()],a.prototype,"cursor",null),a=r([k("esri.views.draw.DrawScreenTool")],a);const L=48;export{a as DrawScreenTool,H as geometryTypeToDrawOperationGeometryType};
