import{iI as Q,s as d,gM as D,fJ as A,iJ as $,iK as K,iL as Z,iA as q,bX as L,iM as j,cO as W,iN as X,aj as R,ai as B,al as k,dp as C,iO as G}from"./index-BCRx-hwS.js";class N{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new Q(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}get hasNoDataValues(){var e;return!!((e=this._samplerData)!=null&&e.data.hasNoDataValues)}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:l,dy:s,y1:a,x0:r}=this._samplerData,{width:c,values:u,noDataValue:m}=n,f=O(s*(a-t),0,i),h=O(l*(e-r),0,i),T=Math.floor(f),M=Math.floor(h),x=T*c+M,F=x+c,_=u[x],E=u[F],z=u[x+1],S=u[F+1];if(_!==m&&E!==m&&z!==m&&S!==m){const b=h-M,V=_+(z-_)*b;return V+(E+(S-E)*b-V)*(f-T)}}}function O(o,e,t){return o<e?e:o>t?t:o}class ue{async queryAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(c=>c.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=y.fromGeometry(t);let l=!1;i!=null&&i.returnSampleInfo||(l=!0);const s={...v,...i,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,s),r=await this._queryAllContinue(e,a,s);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...v,...i},l=new H(e,t.spatialReference,n),s=n.signal;return await e.load({signal:s}),await ee(l,t,s),await this._selectTiles(l,s),await g(l,s),ae(l),oe(l,s)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(s=>s.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,l,n)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,a=e.tileInfo.spatialReference;s.equals(a)||(await D([{source:s,dest:a}],{signal:l}),t=A(t,a));const r=new Y(e,t,i,n);return await this._selectTiles(r,l),await g(r,l),new $(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.filter(c=>!c.tile.hasNoDataValues).map(c=>K(c.extent)),s=await this._createSampler(e[e.length-1],t,n,l);if(s.samplers.length===0)return i;const a=i.samplers.concat(s.samplers),r=new $(a,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),l=t.geometry.coordinates,s=t.sampleInfo;Z(s);const a=[],r=[];for(let f=0;f<l.length;f++){const h=s[f];h.demResolution>=0?h.source||(h.source=n):e.length&&(a.push(l[f]),r.push(f))}if(!e.length||a.length===0)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,i),m=u.sampleInfo;if(!m)throw new Error("no sampleInfo");return r.forEach((f,h)=>{l[f].z=u.geometry.coordinates[h].z,s[f].demResolution=m[h].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&te(e);const i=e.options.demResolution;if(typeof i=="number")ne(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=J(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=n.tilemapCache,s=e.getTilesToFetch();try{if(l&&!I(l))await q(Promise.all(s.map(a=>l.fetchAvailability(a.level,a.row,a.col,{signal:i}))),i);else if(await g(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles","Some elevation tiles are unavailable")}catch(a){L(a),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){le(e),se(e);const i=e.layer.tilemapCache;if(!i||I(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),l={},s=n.map(async a=>{const r=new j(null,0,0,0,W()),c=await X(i.fetchAvailabilityUpsample(a.level,a.row,a.col,r,{signal:t}));c.ok!==!1?a.id!=null&&(l[a.id]=r):L(c.error)});await q(Promise.all(s),t),e.remapTiles(l)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await g(e,t);let n=!1;e.forEachTileToFetch((l,s)=>{i.upsampleTile(l)?n=!0:s()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await D([{source:this.spatialReference,dest:e}],{signal:t});const i=new R({spatialReference:this.spatialReference,points:this.coordinates.map(a=>[a.x,a.y])}),n=A(i,e);if(!n)return null;const l=this.coordinates.map((a,r)=>{const c=a.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c}),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const l=e.clone(i);return l.spatialReference=n,l};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new p(i.x,i.y,i.z,i.m)]:n?[new p(i.x,i.y,i.z)]:l?[new p(i.x,i.y,null,i.m)]:[new p(i.x,i.y)],t._exporter=(s,a)=>e.hasM?new k(s[0].x,s[0].y,s[0].z,s[0].m,a):new k(s[0].x,s[0].y,s[0].z,a);break}case"multipoint":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map(s=>new p(s[0],s[1],s[2],s[3])):n?i.points.map(s=>new p(s[0],s[1],s[2])):l?i.points.map(s=>new p(s[0],s[1],null,s[2])):i.points.map(s=>new p(s[0],s[1])),t._exporter=(s,a)=>e.hasM?new R({points:s.map(r=>[r.x,r.y,r.z,r.m]),hasZ:!0,hasM:!0,spatialReference:a}):new R(s.map(r=>[r.x,r.y,r.z]),a);break}case"polyline":{const i=e,n=[],l=[],{hasZ:s,hasM:a}=e;let r=0;for(const c of i.paths)if(l.push([r,r+c.length]),r+=c.length,s&&a)for(const u of c)n.push(new p(u[0],u[1],u[2],u[3]));else if(s)for(const u of c)n.push(new p(u[0],u[1],u[2]));else if(a)for(const u of c)n.push(new p(u[0],u[1],null,u[2]));else for(const u of c)n.push(new p(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const m=e.hasM?c.map(h=>[h.x,h.y,h.z??0,h.m??0]):c.map(h=>[h.x,h.y,h.z??0]),f=l.map(h=>m.slice(h[0],h[1]));return new B({paths:f,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class p{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new p(this.x,this.y,this.z,this.m)}}class U{constructor(e,t){this.layer=e,this.options=t}}class H extends U{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i)[e].level;this.geometry.coordinates.forEach(l=>l.tile=t.tileAt(n,l.x,l.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const l=n.tile;if(!l)continue;const s=(i=n.tile)==null?void 0:i.id;n.elevationTile||!s||e[s]||(e[s]=l,t.push(l))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class Y extends U{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i);if(!e)return n.length-1;const l=this.extent;if(l==null)return-1;for(let s=n.length-1;s>=0;s--){const a=n[s],r=a.resolution*t.size[0],c=a.resolution*t.size[1];if(Math.ceil(l.width/r)*Math.ceil(l.height/c)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=P(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let l=!1;e(n,()=>l=!0),l?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=P(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=w(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),a=s.extent;if(a==null)return;const r=l.resolution*i.size[0],c=l.resolution*i.size[1],u=Math.ceil((t.xmax-a[0])/r),m=Math.ceil((t.ymax-a[1])/c);for(let f=0;f<m;f++)for(let h=0;h<u;h++){const T=new j(null,s.level,s.row-f,s.col+h);i.updateTileInfo(T),this._tileIsMasked(T)||this._candidateTiles.push(T)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&G(t,e.extent))}}function J(o,e,t=0){const i=w(o,e);let n=i.length-1;if(t>0){const l=t/C(o.spatialReference),s=i.findIndex(a=>a.resolution<l);s===0?n=0:s>0&&(n=s-1)}return n}const v={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function ee(o,e,t){let i;const n=o.layer.tileInfo.spatialReference;if(e instanceof y?i=await e.project(n,t):(await D([{source:e.spatialReference,dest:n}],{signal:t}),i=A(e,n)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);o.geometry=y.fromGeometry(i)}function te(o){if(o.layer.fullExtent==null)return;const e=new N(null);e.sample=()=>o.options.noDataValue,o.outsideExtentTile=e;const t=o.layer.fullExtent;o.geometry.coordinates.forEach(i=>{const n=i.x,l=i.y;(n<t.xmin||n>t.xmax||l<t.ymin||l>t.ymax)&&(i.elevationTile=e)})}function ie(o,e){const{tileInfo:t,tilemapCache:i}=o.layer,n=e/C(t.spatialReference),l=w(t,i);let s=l[0],a=0;for(let r=1;r<l.length;r++){const c=l[r];Math.abs(c.resolution-n)<Math.abs(s.resolution-n)&&(s=c,a=r)}return a}function ne(o,e){const t=ie(o,e);o.selectTilesAtLOD(t)}function le(o){const{tileInfo:e,tilemapCache:t}=o.layer,i=J(e,t,o.options.minDemResolution);o.selectTilesAtLOD(i,o.options.maximumAutoTileRequests)}function w(o,e){const t=o.lods;if(I(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(l=>l.level>=i&&l.level<=n)}return t}async function g(o,e){const t=o.getTilesToFetch(),i={},n=o.options.cache,l=o.options.noDataValue,s=t.map(async a=>{if(a.id==null)return;const r=`${o.layer.uid}:${a.id}:${l}`,c=n!=null?n.get(r):null,u=c??await o.layer.fetchTile(a.level,a.row,a.col,{noDataValue:l,signal:e});n!=null&&n.put(r,u),i[a.id]=new N(a,u)});await q(Promise.allSettled(s),e),o.populateElevationTiles(i)}function se(o){const e=o.layer.tileInfo;let t=0;const i={},n=a=>{a.id!=null&&(a.id in i?i[a.id]++:(i[a.id]=1,t++))},l=a=>{if(a.id==null)return;const r=i[a.id];r===1?(delete i[a.id],t--):i[a.id]=r-1};o.forEachTileToFetch(n,l);let s=!0;for(;s&&(s=!1,o.forEachTileToFetch(a=>{t<=o.options.maximumAutoTileRequests||(l(a),e.upsampleTile(a)&&(s=!0),n(a))},l),s););}function ae(o){o.geometry.coordinates.forEach(e=>{const t=e.elevationTile;let i=o.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i})}function P(o,e){const t={},i=[];for(const l of o){const s=l.id;s&&!t[s]?(t[s]=l,i.push(l)):e&&e(l)}const n=i.sort((l,s)=>l.level-s.level);return n.filter((l,s)=>{for(let a=0;a<s;a++){const r=n[a].extent;if(r&&l.extent&&G(r,l.extent))return e&&e(l),!1}return!0})}async function oe(o,e){const t=await o.geometry.project(o.outSpatialReference,e);Z(t);const i={geometry:t.export(),noDataValue:o.options.noDataValue};return o.options.returnSampleInfo&&(i.sampleInfo=re(o)),o.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),i}function re(o){const e=o.layer.tileInfo,t=C(e.spatialReference);return o.geometry.coordinates.map(i=>{let n=-1;return i.elevationTile&&i.elevationTile!==o.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}})}function I(o){return(o==null?void 0:o.tileInfo)!=null}export{ue as ElevationQuery,y as GeometryDescriptor,J as getFinestLodIndex};
