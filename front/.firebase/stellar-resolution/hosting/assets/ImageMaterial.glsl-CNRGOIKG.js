import{BG as C,BH as E,BI as b,BJ as x,BK as B,BL as D,BM as y,BN as O,az as o,BO as _,BP as P,BQ as w,BR as A,BS as S,r0 as N,BT as R,BU as M,_ as V,BV as L,BW as j,BX as F,BY as z,BZ as U,B_ as W,B$ as H,C0 as k,C1 as G,C2 as Q,C3 as q,C4 as J,C5 as K,C6 as X,C7 as Y,ks as v,py as Z,C8 as ee,r as u,C9 as c,nx as h,Ca as m,Cb as f,Cc as te,Cd as se,Ce as re,Cf as ie,Cg as ae,th as oe,Ch as ne,Ci as le,pA as ue}from"./index-BCRx-hwS.js";import{c as ce}from"./DefaultLayouts-DZ3QL_Cj.js";import{r as pe}from"./TriangleMaterial-Bf5qGOHH.js";class T extends C{}function I(s){const e=new E,{vertex:t,fragment:i,varyings:p}=e,{output:n,perspectiveInterpolation:l}=s;return b(t,s),e.include(x,s),e.include(B,s),e.fragment.include(D,s),e.include(y,s),e.include(O,s),e.attributes.add(o.POSITION,"vec3"),e.attributes.add(o.UV0,"vec2"),l&&e.attributes.add(o.PERSPECTIVEDIVIDE,"float"),t.main.add(P`
    vpos = position;
    forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);
    vTexCoord = uv0;
    gl_Position = transformPosition(proj, view, vpos);
    ${_(l,"gl_Position *= perspectiveDivide;")}`),p.add("vpos","vec3",{invariant:!0}),p.add("vTexCoord","vec2"),i.include(w),i.uniforms.add(new A("opacity",r=>r.opacity),new S("tex",r=>r.glTexture)).main.add(P`
    discardBySlice(vpos);
    discardByTerrainDepth();
    ${_(n===N.ObjectAndLayerIdColor,"fragColor = vec4(0, 0, 0, 1); return;")}
    vec4 finalColor = texture(tex, vTexCoord) * opacity;
    outputColorHighlightOID(finalColor, vpos, finalColor.rgb);`),e}const de=Object.freeze(Object.defineProperty({__proto__:null,ImageMaterialPassParameters:T,build:I},Symbol.toStringTag,{value:"Module"}));class he extends R{constructor(e,t){super(e,t,new M(de,()=>V(()=>Promise.resolve().then(()=>_e),void 0)),$)}_getPipelineState(e,t){const{oitPass:i,output:p,hasOccludees:n,cullFace:l}=e,r=i===L.NONE;return j({blending:X(p)?r?J:K(i):null,culling:q(l),depthTest:{func:Q(i)},depthWrite:G(e),drawBuffers:k(i,p),colorWrite:H,stencilWrite:n?W:null,stencilTest:n?t?z:U:null,polygonOffset:F(e)})}initializePipeline(e){return this._occludeePipeline=this._getPipelineState(e,!0),this._getPipelineState(e,!1)}getPipeline(e){return e?this._occludeePipeline:super.getPipeline()}}const $=new Map([[o.POSITION,0],[o.UV0,2],[o.PERSPECTIVEDIVIDE,3]]);class a extends Y{constructor(e){super(),this.draped=e,this.cullFace=v.None,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.perspectiveInterpolation=!0,this.textureCoordinateType=Z.None,this.emissionSource=ee.None,this.discardInvisibleFragments=!0,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1,this.snowCover=!1}}u([c({count:v.COUNT})],a.prototype,"cullFace",void 0),u([c()],a.prototype,"enableOffset",void 0),u([c()],a.prototype,"writeDepth",void 0),u([c()],a.prototype,"hasOccludees",void 0),u([c()],a.prototype,"terrainDepthTest",void 0),u([c()],a.prototype,"cullAboveTerrain",void 0),u([c()],a.prototype,"perspectiveInterpolation",void 0);class Ie extends pe{constructor(e){super(e,ge),this.vertexAttributeLocations=$,this.supportsEdges=!0,this.produces=new Map([[h.OPAQUE_MATERIAL,t=>m(t)],[h.TRANSPARENT_MATERIAL,t=>f(t)&&this.parameters.writeDepth],[h.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,t=>f(t)&&!this.parameters.writeDepth],[h.DRAPED_MATERIAL,t=>f(t)||m(t)]]),this._configuration=new a(e.draped)}dispose(){this.setParameters({texture:void 0})}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<te,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}get visible(){return!0}createGLMaterial(e){return new fe(e)}createBufferWriter(){let e=ce;return this.parameters.perspectiveInterpolation&&(e=e.clone().f32(o.PERSPECTIVEDIVIDE)),new ve(e)}}class fe extends re{constructor(e){super({...e,...e.material.parameters}),this.parameters=e;const t=this._material.parameters.texture;ie(t)&&e.textures.updater.add(t)}dispose(){this.parameters.textures.updater.remove(this._material.parameters.texture)}beginSlot(e){return this.getTechnique(he,e)}}class ve extends ae{write(e,t,i,p,n,l){for(const r of this.vertexBufferLayout.fields.keys()){const d=i.get(r);if(d)if(r===o.PERSPECTIVEDIVIDE){oe(d.size===1);const g=n.getField(r,ne);g&&le(d,g,l)}else ue(r,d,e,t,n,l)}return null}}class ge extends se{constructor(e,t){super(),this.texture=e,this.draped=t,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=v.None,this.opacity=1,this.perspectiveInterpolation=!1}get glTexture(){return this.texture.glTexture}}const _e=Object.freeze(Object.defineProperty({__proto__:null,ImageMaterialPassParameters:T,build:I},Symbol.toStringTag,{value:"Module"}));export{Ie as _};
