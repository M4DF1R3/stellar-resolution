import{r,m as i,b as p,F as a}from"./index-BCRx-hwS.js";import{h as m}from"./DynamicLayerView3D-agzPLFGE.js";import{d as n}from"./SublayerPopupHighlightHelper3D-BDmZeJsl.js";import{y as h}from"./ExportImageParameters-DYGEAiMW.js";import{i as l}from"./timeSupport-CZ-Zr9q3.js";import"./SubView3D-DDpKXTIC.js";import"./ImageMaterial.glsl-CNRGOIKG.js";import"./DefaultLayouts-DZ3QL_Cj.js";import"./TriangleMaterial-Bf5qGOHH.js";import"./LayerView3D-DHUO1o9J.js";import"./LayerView-B-ORu7tc.js";import"./RefreshableLayerView-Cj-6vaWQ.js";import"./ImageHighlightHelper3D-DDNiZ8Dc.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-CwFAf9xs.js";const u=o=>{let t=class extends o{initialize(){this.exportImageParameters=new h({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return l(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return r([i()],t.prototype,"exportImageParameters",void 0),r([i({readOnly:!0})],t.prototype,"floors",null),r([i({readOnly:!0})],t.prototype,"exportImageVersion",null),r([i()],t.prototype,"layer",void 0),r([i()],t.prototype,"suspended",void 0),r([i({readOnly:!0})],t.prototype,"timeExtent",null),t=r([p("esri.views.layers.MapImageLayerView")],t),t};let s=class extends u(m){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add(()=>this.exportImageVersion,()=>this._updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new n({view:this.view,layerView:this,updatingHandles:this._updatingHandles}),this.addHandles(a(this._popupHighlightHelper))}fetchPopupFeaturesAtLocation(o,t){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(o,t)}highlight(o,t){return this._popupHighlightHelper.highlight(o,t)}getFetchOptions(){return{timeExtent:this.timeExtent}}};s=r([p("esri.views.3d.layers.MapImageLayerView3D")],s);const L=s;export{L as default};
