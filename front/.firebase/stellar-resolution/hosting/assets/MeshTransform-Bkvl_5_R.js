import{ba as b,au as h,bb as p,bc as c,bd as x,be as y,bf as e,bg as A,bh as n,bi as g,bj as m,bk as l,bl as M,bm as N,bn as d,bo as v,r,m as a,b as w}from"./index-BCRx-hwS.js";var i,s;let o=(s=class extends b{constructor(t){super(t),this.translation=h(),this.rotationAxis=p(c),this.rotationAngle=0,this.scale=x(1,1,1)}get rotation(){return y(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=e(l(t)),this.rotationAngle=A(t)}get localMatrix(){const t=n();return g(u,l(this.rotation),m(this.rotation)),M(t,u,this.translation,this.scale),t}get localMatrixInverse(){return N(n(),this.localMatrix)}equals(t){return this===t||t!=null&&d(this.localMatrix,t.localMatrix)}clone(){const t={translation:e(this.translation),rotationAxis:e(this.rotationAxis),rotationAngle:this.rotationAngle,scale:e(this.scale)};return new i(t)}},i=s,s);r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),r([a({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),r([a()],o.prototype,"rotation",null),r([a()],o.prototype,"localMatrix",null),r([a()],o.prototype,"localMatrixInverse",null),o=i=r([w("esri.geometry.support.MeshTransform")],o);const u=v();export{o as A};
