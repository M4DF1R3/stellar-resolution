import{cf as x}from"./index-BCRx-hwS.js";const V="Raster.",u="Raster.Dim.",$=".Max",m={servicePixelValue:"Raster.ServicePixelValue",rawServicePixelValue:"Raster.ServicePixelValue.Raw",itemPixelValue:"Raster.ItemPixelValue",magnitude:"Raster.Magnitude",direction:"Raster.Direction",variable:"Raster.Variable"},w=new Map([["quarters","Quarter"],["months","Month"],["weeks","Week of the year"],["days","Day of the year"]]);function f(e,a){return new x({name:e,alias:a,domain:null,editable:!1,length:50,type:"string"})}function d(e,a){return new x({name:e,alias:a,domain:null,editable:!1,type:"double"})}function b(e,a){return new x({name:e,alias:a,domain:null,editable:!1,type:"date"})}function S(e){return f(m.servicePixelValue,e??"Service Pixel Value")}function R(e){return f(m.rawServicePixelValue,e??"Raw Service Pixel Value")}function M(){return f(m.itemPixelValue,"Item Pixel Value")}function I(e){return f(`${m.servicePixelValue}.${e}`,e)}function D(e){return d(`${m.magnitude}`,"Magnitude"+(e?` (${e})`:""))}function E(){return d(`${m.direction}`,"Direction (Â°)")}function N(e){return e.fields.filter(a=>a.type!=="oid"&&a.name.toLowerCase()!=="value").map(a=>{const t=a.clone();return t.name=`${V}${a.name}`,t})}function W(e){const a=new Set,t=new Set,n=new Map;return e.variables.forEach(({dimensions:i})=>{i.forEach(r=>{var o;if(r.recurring)n.set(r.name,r.unit);else{const c=((o=r.unit)==null?void 0:o.trim())==="ISO8601"?a:t;c.add(r.name),r.hasRanges&&c.add(`${r.name}${$}`)}})}),[f(m.variable,"Variable"),...[...a].map(i=>b(`${u}${i}`,h(i))),...[...t].map(i=>d(`${u}${i}`,h(i))),...[...n].map(([i,r])=>d(`${u}${i}`,y(i,r)))]}function y(e,a){return a=a==null?void 0:a.toLowerCase(),a&&w.has(a)?w.get(a):h(e)}function h(e){const a=e.endsWith($),t=a?e.slice(0,-4):e,n=t==="StdTime"?"Standard Time":t==="StdZ"?"Standard Z":t;return a?`${n} Max`:n}function p(e,a){return a?new Date(e):e}function T(e,a,t){t!=null&&t.length&&(a[m.variable]=t[0].variableName,t.forEach(({dimensionName:n,values:i})=>{if(n&&(i!=null&&i.length)){const r=`${u}${n}`,o=e.find(({name:s})=>s===r);if(!o)return;const c=o.type==="date",l=i[0];if(Array.isArray(l)){if(a[`${u}${n}`]=p(l[0],c),l[1]!=null){const s=`${u}${n}${$}`;if(e.some(({name:v})=>v===s)){const v=p(l[1],c);a[s]=v}}}else a[`${u}${n}`]=p(l,c)}}))}function k(e,a){if(a.pixelType.startsWith("f")&&e.forEach(({format:t,fieldName:n})=>{t&&n&&/^raster\.(item|service)pixelvalue/i.test(n)&&(t.places=2)}),a.multidimensionalInfo){const t=a.multidimensionalInfo.variables.flatMap(({dimensions:n})=>n);e.forEach(({format:n,fieldName:i})=>{var r;if(n&&(i!=null&&i.startsWith(u))){const o=i.slice(u.length),c=`${o}${$}`,l=t.find(({name:s})=>s===o||s===c);(r=l==null?void 0:l.values)!=null&&r.every(s=>Number.isInteger(s))&&(n.places=0)}})}}function g(e){return(e==null?void 0:e.datasetFormat)==="Function"}function A(e){return g(e)?e.primaryRasters.rasters:[e]}export{E as $,T as V,m as a,k as b,R as c,D as d,u as e,I as f,M as m,V as n,S as o,W as p,g as r,A as t,N as v};
