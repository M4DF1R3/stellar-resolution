import{d_ as D,al as E,d$ as S,e0 as x,e1 as m,e2 as $,e3 as y,e4 as g,e5 as N,e6 as H,au as i,e7 as G,e8 as P,e9 as I,ea as U,aT as h,eb as A,ec as F,dS as M,ed as R,ee as k,ef as q,eg as T,eh as v,ei as _,ej as j,aw as z,av as B}from"./index-BCRx-hwS.js";import{w as J}from"./InteractiveToolBase-Cty8kcDX.js";function K(e,r){return C(e,()=>r)}function ne(e){return C(e,r=>r.plane)}function C(e,r){const t=i(),l=i();let s=!1;return n=>{const u=r(n);if(n.action==="start"){const c=m(n.screenStart,$(y.get())),o=g(e.state.camera,c,w);o!=null&&(s=H(u,o,t))}if(!s)return null;const a=m(n.screenEnd,$(y.get())),d=g(e.state.camera,a,w);return d==null?null:H(u,d,l)?{...n,renderStart:t,renderEnd:l,plane:u,ray:d}:null}}function L(e,r,t=0,l=null,s=null){let n=null;return u=>{if(u.action==="start"&&(n=e.sceneIntersectionHelper.intersectElevationFromScreen(S(u.screenStart.x,u.screenStart.y),r,t,s),n!=null&&l!=null&&!x(n,n,l))||n==null)return null;const a=e.sceneIntersectionHelper.intersectElevationFromScreen(S(u.screenEnd.x,u.screenEnd.y),r,t,s);return a!=null&&(l==null||x(a,a,l))?{...u,mapStart:n,mapEnd:a}:null}}function Q(e,r,t,l=null,s=null){return L(e,t,D(r,e,t),l,s)}function te(e,r,t,l){const s=t.toMap(e.screenStart);return s!=null?Q(r,s,t.elevationInfo,l):null}function V(e,r){const t=O,l=b,s=F();e.renderCoordsHelper.worldUpAtPosition(r,t);const n=M(k(s),t,R(l,r,e.state.camera.eye));return M(n,n,t),q(r,n,s)}function re(e,r,t){let l=null;const s=new J;return s.next(K(e,V(e,r))).next(W(e,r)).next(X(e,t)).next(n=>{n.mapEnd.x=n.mapStart.x,n.mapEnd.y=n.mapStart.y,l=n}),n=>(l=null,s.execute(n),l)}function W(e,r){const t=i(),l=T(r);e.renderCoordsHelper.worldUpAtPosition(r,t);const s=i(),n=i(),u=a=>(R(a,a,r),_(t,a,a),e.viewingMode==="global"&&T(a)*Math.sign(j(t,a))<.001-l&&R(a,z(a,t,.001),r),B(a,a,r),a);return a=>(a.renderStart=u(v(s,a.renderStart)),a.renderEnd=u(v(n,a.renderEnd)),a)}function le(e,r){const t=l=>{const s=m(l,$(Y)),n=g(e.state.camera,s,w);if(n==null)return null;const u=A(r,n,O,b);return u==null?void 0:u[0]};return l=>{const s=t(l.screenStart);if(s==null)return null;const n=t(l.screenEnd);return n==null?null:{...l,renderStart:s,renderEnd:n}}}function X(e,r){const t=e.renderCoordsHelper;return l=>{const s=t.fromRenderCoords(l.renderStart,new E({spatialReference:r})),n=t.fromRenderCoords(l.renderEnd,new E({spatialReference:r}));return s!=null&&n!=null?{...l,mapStart:s,mapEnd:n}:null}}var p;function se(e){let r=null;return t=>{switch(t.action){case"start":r=e.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function ae(e,r=null){const t=new G(e.state.viewingMode);t.options.selectionMode=!0,t.options.store=P.MIN,t.options.hud=!1;const l=S(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},n=i(),u=r??e.spatialReference,a=c=>{e.map.ground&&e.map.ground.opacity<1?s.exclude.add(I):s.exclude.delete(I),e.sceneIntersectionHelper.intersectIntersectorScreen(m(c,l),t,s);const o=t.results.min;let f;if(o.getIntersectionPoint(n))f=o.intersector===U.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(n))return null;f=p.GROUND}return{location:e.renderCoordsHelper.fromRenderCoords(n,new E({spatialReference:u})),surfaceType:f}};let d;return c=>{if(c.action==="start"){const f=a(c.screenStart);d=f!=null?f.location:null}if(d==null)return null;const o=a(c.screenEnd);return(o==null?void 0:o.location)!=null?{...c,mapStart:d,mapEnd:o.location,surfaceType:o.surfaceType}:null}}(function(e){e[e.GROUND=0]="GROUND",e[e.OTHER=1]="OTHER"})(p||(p={}));const Y=h(),O=i(),b=i(),w=N();export{le as A,ae as B,ne as C,X as F,re as G,Q as M,te as N,K as T,p as q,se as z};
