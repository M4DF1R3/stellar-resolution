const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/jsonConverter-BHyufzdl.js","assets/Point2D-CXC1yv_O.js","assets/ProjectionTransformation-CoAUJI3p.js","assets/Envelope2D-C_JUGA2P.js","assets/Transformation2D-sny6HUws.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-BCRx-hwS.js","assets/index-BR8bGno3.css","assets/OperatorDefinitions-DP7_WWTp.js"])))=>i.map(i=>d[i]);
import{fM as s,L as _,_ as d,g$ as l}from"./index-BCRx-hwS.js";import{i as v,c as g,u as x,s as G}from"./operatorGeodesicBuffer-D9pHJaCX.js";import"./SimpleGeometryCursor-B92kdZ15.js";let c,y,f;function N(){return!!c&&G()}async function T(){if(!N()){const[t]=await Promise.all([d(()=>import("./jsonConverter-BHyufzdl.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8])),x()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function $(t,a,m={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:r}=m;r&&(a=s(a,r,"meters"),e&&(e=s(e,r,"meters")));const o=y(t),i=o.getSpatialReference();return f(v(o.getGeometry(),i,l[n],a,e),i)}function E(t,a,m={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:r=!1,unit:o}=m;o&&(a=a.map(u=>s(u,o,"meters")),e&&(e=s(e,o,"meters")));const[i,p]=c(t);return g(i,p,l[n],a,e,r).map(u=>f(u,p)).filter(_)}export{$ as execute,E as executeMany,N as isLoaded,T as load};
