import{aA as h,aV as m,aB as $,aW as E,aX as f}from"./index-BCRx-hwS.js";import{p as l,a as g}from"./triangulationUtils-Di5oVG4z.js";function O(n,p,i,a){const t=n.type==="polygon"?l.CCW_IS_HOLE:l.NONE,s=n.type==="polygon"?n.rings:n.paths,{position:o,outlines:e}=g(s,!!n.hasZ,t,n.spatialReference),r=h(o.length),c=m(o,n.spatialReference,0,r,0,o,0,o.length/3,p,i,a),u=c!=null;return{lines:u?y(e,o,r):[],projectionSuccess:u,sampledElevation:c}}function S(n,p){const i=n.type==="polygon"?l.CCW_IS_HOLE:l.NONE,a=n.type==="polygon"?n.rings:n.paths,{position:t,outlines:s}=g(a,!1,i),o=$(t,n.spatialReference,0,t,p,0);for(let e=2;e<t.length;e+=3)t[e]=E;return{lines:o?y(s,t):[],projectionSuccess:o}}function y(n,p,i=null){const a=new Array;for(const{index:t,count:s}of n){if(s<=1)continue;const o=3*t,e=3*s;a.push({position:f(p,3*t,3*s),mapPositions:i!=null?f(i,o,e):void 0})}return a}export{S as l,O as p};
