const S=9999999e31,y=2e-7,U={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function x(t){return U[t]??[-34028234663852886e22,34028234663852886e22]}function O(t,n){return t==null||n==null?"s32":t<0?t>=-128&&n<128?"s8":t>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function V(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function P(t,n,u,r){let[l,o]=x(u);const e=V(u);return e&&(l-=1e-5,o+=1e-5),e?u.startsWith("u")?v(t,n,r,[l,o]):w(t,n,r,[l,o]):I(t,n,r,[l,o])}function W(t,n){for(let u=0;u<n.length;u++)n[u]&&isNaN(t[u])&&(n[u]=0,t[u]=0)}function v(t,n,u,r){const[l,o]=r;for(let e=0;e<n.length;e++)if(n[e]){const i=t[e];i<l||i>o?n[e]=0:u[e]=i+.5|0}}function w(t,n,u,r){const[l,o]=r;for(let e=0;e<n.length;e++)if(n[e]){const i=t[e];i<l||i>o?n[e]=0:u[e]=i+(i>0?.5:-.5)|0}}function I(t,n,u,r){const[l,o]=r;for(let e=0;e<n.length;e++)if(n[e]){const i=t[e];i<l||i>o?n[e]=0:u[e]=i}}function C(t,n,u){var M,k;if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:l,pixelType:o}=t,e=r[0].length,i=t.bandMasks??[],m=t.mask??new Uint8Array(e).fill(255),E=o==="f32"||o==="f64",p=x(o);let N=!1;for(let s=0;s<r.length;s++){const a=typeof n=="number"?n:n[s];if(a==null)continue;const d=((M=l==null?void 0:l[s])==null?void 0:M.minValue)??p[0],b=((k=l==null?void 0:l[s])==null?void 0:k.maxValue)??p[1];if(d>a+Number.EPSILON||b<a-Number.EPSILON)continue;const h=i[s]||m.slice(),f=r[s],A=u==null?void 0:u.customFloatTolerance;if(E&&A!==0){let c=A;c||(c=Math.abs(a)>=S?y*Math.abs(a):o==="f32"?2**-23:Number.EPSILON);for(let g=0;g<f.length;g++)h[g]&&Math.abs(f[g]-a)<c&&(f[g]=0,h[g]=0,m[g]=0,N=!0)}else for(let c=0;c<f.length;c++)h[c]&&f[c]===a&&(f[c]=0,h[c]=0,m[c]=0,N=!0);i[s]=h}if(N){const s=t.bandMasks||t.pixels.length>1?i:null;u!=null&&u.matchAllNoData?t.mask=s&&s.length>1?L(s):m:(t.bandMasks=s,t.mask=m)}function L(s){if(s.length<2)return s[0];const a=s[0].length,d=new Uint8Array(a).fill(0);for(let b=0;b<s.length;b++){const h=s[b];for(let f=0;f<a;f++)h[f]&&(d[f]=255)}return d}N&&"updateStatistics"in t&&t.updateStatistics()}export{P as c,W as f,C as g,O as i,V as r,x as u};
