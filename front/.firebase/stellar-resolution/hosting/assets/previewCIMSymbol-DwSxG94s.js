import{fT as O,db as p,ff as m}from"./index-BCRx-hwS.js";import{t as S}from"./CIMSymbolHelper-CYZuccbG.js";import{CIMSymbolRasterizer as T}from"./CIMSymbolRasterizer-vKwHGv48.js";import{OverrideHelper as q}from"./OverrideHelper-qa7kYMjz.js";import{l as D,t as v}from"./symbolUtils-3LpAap1x.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-DkI5Zo_2.js";import"./mat2d-BuXHlgXK.js";import"./mat2df32-Dpt2CT5P.js";import"./callExpressionWithFeature-DyI7NBoJ.js";import"./utils-DKCQA0Df.js";import"./cimSymbolUtils-CFsnI9l1.js";import"./webStyleSymbolUtils-f_yBwCxr.js";import"./devEnvironmentUtils-CnNDiFMM.js";const d=new T(null),u=m(v.size),G=m(v.maxSize),M=m(v.lineWidth),E=1;async function U(l,e,o){const r=e==null?void 0:e.size;let t=r!=null&&typeof r=="object"&&"width"in r?r.width:r,a=r!=null&&typeof r=="object"&&"height"in r?r.height:r;if(!t||!a)if(o==="esriGeometryPolygon")t=a=e.maxSize?Math.min(e.maxSize,u):u;else{const s=await k(l,e,o);s&&(t=s.width,a=s.height),o==="esriGeometryPolyline"&&(t=e.maxSize?Math.min(e.maxSize,M):M),t=t!=null&&isFinite(t)?Math.min(t,G):u,a=a!=null&&isFinite(a)?Math.max(Math.min(a,G),E):u}return e.style==="legend"&&o==="esriGeometryPolyline"&&(t=M),{width:t,height:a}}async function k(l,e={},o){var c;const r=e.cimOptions||e;o??(o=r.geometryType||O((c=l==null?void 0:l.data)==null?void 0:c.symbol));const{feature:t,fieldMap:a,viewParams:s}=r,n=await q.resolveSymbolOverrides(l.data,t,null,a,o,null,s);if(!n)return null;(l=l.clone()).data={type:"CIMSymbolReference",symbol:n},l.data.primitiveOverrides=void 0;const i=[];return S.fetchResources(n,d.resourceManager,i),S.fetchFonts(n,d.resourceManager,i),i.length>0&&await Promise.all(i),S.getEnvelope(n,null,d.resourceManager)}async function te(l,e={}){var x,C;const{node:o,opacity:r,symbolConfig:t}=e,a=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,s=e.cimOptions||e,n=s.geometryType||O((x=l==null?void 0:l.data)==null?void 0:x.symbol),i=await U(l,e,n),{feature:c,fieldMap:$}=s,F=e!=null&&e.geometry||a||n!=="esriGeometryPolygon"?"preview":"legend";let z=i;const P=i;if(e!=null&&e.geometry&&(n==="esriGeometryPolygon"||n==="esriGeometryPolyline")&&(p(i.width)<200||p(i.height)<200)){const R=i.width>i.height?m(200)*i.height/i.width:m(200);z={width:i.width>i.height?m(200):m(200)*i.width/i.height,height:R}}const f=await d.rasterizeCIMSymbolAsync(l,c,z,F,$,n,null,s.viewParams,s.allowScalingUp,(C=e==null?void 0:e.geometry)==null?void 0:C.toJSON());if(!f)return null;const{width:j,height:L}=f,y=document.createElement("canvas");y.width=j,y.height=L,y.getContext("2d").putImageData(f,0,0);const w=p(P.width),b=p(P.height),h=new Image(w,b);h.src=y.toDataURL(),h.ariaLabel=e.ariaLabel??null,h.alt=e.ariaLabel??"",r!=null&&(h.style.opacity=`${r}`);let g=h;if(e.effectView!=null){const I={shape:{type:"image",x:0,y:0,width:w,height:b,src:h.src},fill:null,stroke:null,offset:[0,0]};g=D([[I]],[w,b],e)}return o&&g&&o.appendChild(g),g}export{k as getCIMSymbolPreviewSize,te as previewCIMSymbol};
