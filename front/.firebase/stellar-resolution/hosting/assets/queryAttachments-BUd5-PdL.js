import{fy as h,b1 as i,fz as m,fA as p}from"./index-BCRx-hwS.js";import{d as y}from"./AttachmentInfo-7RqJHgko.js";function l(s){const t=s.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t}function b(s,t){const e={};for(const o of t){const{parentObjectId:a,parentGlobalId:n,attachmentInfos:c}=o;for(const r of c){const{id:u}=r,f=m(p(`${s.path}/${a}/attachments/${u}`)),d=y.fromJSON(r);d.set({url:f,parentObjectId:a,parentGlobalId:n}),e[a]?e[a].push(d):e[a]=[d]}}return e}function q(s,t,e){let o={query:h({...s.query,f:"json",...l(t)})};return e&&(o={...e,...o,query:{...e.query,...o.query}}),i(s.path+"/queryAttachments",o).then(a=>a.data.attachmentGroups)}async function A(s,t,e){const{objectIds:o}=t,a=[];for(const n of o)a.push(i(s.path+"/"+n+"/attachments",e));return Promise.all(a).then(n=>o.map((c,r)=>({parentObjectId:c,attachmentInfos:n[r].data.attachmentInfos})))}export{q as executeAttachmentQuery,A as fetchAttachments,b as processAttachmentQueryResult};
